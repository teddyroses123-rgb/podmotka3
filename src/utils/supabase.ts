import { createClient } from '@supabase/supabase-js';
import { SiteContent } from '../types/content';

const supabaseUrl = import.meta.env.VITE_SUPABASE_URL;
const supabaseAnonKey = import.meta.env.VITE_SUPABASE_ANON_KEY;

if (!supabaseUrl || !supabaseAnonKey) {
  console.error('‚ùå Supabase environment variables not found');
}

export const supabase = createClient(supabaseUrl || '', supabaseAnonKey || '');

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –∫–æ–Ω—Ç–µ–Ω—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é –¥–µ—Ñ–æ–ª—Ç–Ω—ã–º (–±–µ–∑ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π)
const isCompletelyDefaultContent = (content: SiteContent): boolean => {
  try {
    const hasDefaultHeroTitle = content.blocks.some(block => 
      block.id === 'hero' && 
      block.title === '–ü–Ü–î–ú–û–¢–ö–ê –°–ü–Ü–î–û–ú–ï–¢–†–ê ‚Äî –£ –í–ê–®–ò–• –†–£–ö–ê–•'
    );
    
    const hasDefaultCanPrice = content.blocks.some(block => 
      block.id === 'can-module' && block.price === '2500'
    );
    
    const hasDefaultAnalogPrice = content.blocks.some(block => 
      block.id === 'analog-module' && block.price === '1800'
    );
    
    const hasDefaultOpsPrice = content.blocks.some(block => 
      block.id === 'ops-module' && block.price === '3200'
    );
    
    const hasOnlyDefaultBlocks = content.blocks.filter(block => 
      block.type === 'custom'
    ).length === 0; // –ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –±–ª–æ–∫–æ–≤
    
    // –°–¢–†–û–ì–ê–Ø –ø—Ä–æ–≤–µ—Ä–∫–∞ - –í–°–ï 5 –ø—Ä–∏–∑–Ω–∞–∫–æ–≤ –¥–æ–ª–∂–Ω—ã —Å–æ–≤–ø–∞–¥–∞—Ç—å –¥–ª—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
    return hasDefaultHeroTitle && 
           hasDefaultCanPrice && 
           hasDefaultAnalogPrice && 
           hasDefaultOpsPrice && 
           hasOnlyDefaultBlocks;
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–µ—Ñ–æ–ª—Ç–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞:', error);
    return false; // –ü—Ä–∏ –æ—à–∏–±–∫–µ –ù–ï –±–ª–æ–∫–∏—Ä—É–µ–º - –ø—É—Å—Ç—å —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è
  }
};

// –û–†–ò–ì–ò–ù–ê–õ–¨–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø + –¢–û–õ–¨–ö–û –ó–ê–©–ò–¢–ê –û–¢ –î–ï–§–û–õ–¢–ê
export const saveContentToDatabase = async (content: SiteContent): Promise<boolean> => {
  try {
    // Check if Supabase is properly configured
    if (!supabaseUrl || !supabaseAnonKey) {
      console.error('‚ùå Supabase not configured - missing environment variables');
      return false;
    }

    // –ï–î–ò–ù–°–¢–í–ï–ù–ù–ê–Ø –î–û–ë–ê–í–õ–ï–ù–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê: –ù–ï –°–û–•–†–ê–ù–Ø–ï–ú –î–ï–§–û–õ–¢–ù–´–ô –ö–û–ù–¢–ï–ù–¢!
    if (isCompletelyDefaultContent(content)) {
      console.log('üö´ –ë–õ–û–ö–ò–†–û–í–ö–ê –í SUPABASE: –ü–û–õ–ù–û–°–¢–¨–Æ –î–ï–§–û–õ–¢–ù–´–ô –ö–û–ù–¢–ï–ù–¢ –ù–ï –°–û–•–†–ê–ù–Ø–ï–¢–°–Ø!');
      return false;
    }

    console.log('üîÑ –°–û–•–†–ê–ù–ï–ù–ò–ï –ö–û–ù–¢–ï–ù–¢–ê –í –ë–î...');
    
    // –û–†–ò–ì–ò–ù–ê–õ–¨–ù–ê–Ø –õ–û–ì–ò–ö–ê: DELETE + INSERT –¥–ª—è –ø–æ–ª–Ω–æ–π –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∏
    const { error: deleteError } = await supabase
      .from('site_content')
      .delete()
      .eq('id', 'main');
    
    if (deleteError) {
      console.log('‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å—Ç–∞—Ä–æ–π –∑–∞–ø–∏—Å–∏:', deleteError.message);
    } else {
      console.log('üóëÔ∏è –°—Ç–∞—Ä–∞—è –∑–∞–ø–∏—Å—å —É–¥–∞–ª–µ–Ω–∞');
    }
    
    // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å
    const { data, error } = await supabase
      .from('site_content')
      .insert({
        id: 'main',
        content: content,
        created_at: new Date().toISOString(),
        updated_at: new Date().toISOString()
      });
    

    if (error) {
      console.error('‚ùå –û–®–ò–ë–ö–ê –°–û–ó–î–ê–ù–ò–Ø –ù–û–í–û–ô –ó–ê–ü–ò–°–ò –í –ë–î:', error);
      return false;
    }

    console.log('‚úÖ –ö–û–ù–¢–ï–ù–¢ –£–°–ü–ï–®–ù–û –°–û–•–†–ê–ù–ï–ù –í –ë–î!', data);
    return true;
  } catch (error) {
    console.error('‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –°–û–•–†–ê–ù–ï–ù–ò–Ø –í –ë–î:', error);
    return false;
  }
};

// –û–†–ò–ì–ò–ù–ê–õ–¨–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø –ó–ê–ì–†–£–ó–ö–ò - –ë–ï–ó –ò–ó–ú–ï–ù–ï–ù–ò–ô
export const loadContentFromDatabase = async (): Promise<SiteContent | null> => {
  try {
    // Check if Supabase is properly configured
    if (!supabaseUrl || !supabaseAnonKey) {
      console.error('‚ùå Supabase not configured - missing environment variables');
      return null;
    }

    console.log('üîÑ –ó–ê–ì–†–£–ó–ö–ê –ò–ó –ë–î...');
    
    const { data, error } = await supabase
      .from('site_content')
      .select('content')
      .eq('id', 'main')
      .maybeSingle();

    if (error) {
      console.error('‚ùå –û–®–ò–ë–ö–ê –ó–ê–ì–†–£–ó–ö–ò –ò–ó –ë–î:', error);
      return null;
    }

    if (data && data.content) {
      console.log('‚úÖ –ö–û–ù–¢–ï–ù–¢ –ó–ê–ì–†–£–ñ–ï–ù –ò–ó –ë–î');
      return data.content as SiteContent;
    }

    console.log('‚ö†Ô∏è –ù–ï–¢ –î–ê–ù–ù–´–• –í –ë–î');
    return null;
  } catch (error) {
    console.error('‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –ó–ê–ì–†–£–ó–ö–ò –ò–ó –ë–î:', error);
    return null;
  }
};