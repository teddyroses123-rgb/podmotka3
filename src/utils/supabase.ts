import { createClient } from '@supabase/supabase-js';
import { SiteContent } from '../types/content';

const supabaseUrl = import.meta.env.VITE_SUPABASE_URL;
const supabaseAnonKey = import.meta.env.VITE_SUPABASE_ANON_KEY;

if (!supabaseUrl || !supabaseAnonKey) {
  console.error('‚ùå Supabase environment variables not found');
}

export const supabase = createClient(supabaseUrl || '', supabaseAnonKey || '');

// –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –§–£–ù–ö–¶–ò–Ø: –ü—Ä–æ–≤–µ—Ä–∫–∞ —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –∫–æ–Ω—Ç–µ–Ω—Ç –¥–µ—Ñ–æ–ª—Ç–Ω—ã–º
const isDefaultContent = (content: SiteContent): boolean => {
  try {
    const hasDefaultHeroTitle = content.blocks.some(block => 
      block.id === 'hero' && 
      block.title === '–ü–Ü–î–ú–û–¢–ö–ê –°–ü–Ü–î–û–ú–ï–¢–†–ê ‚Äî –£ –í–ê–®–ò–• –†–£–ö–ê–•'
    );
    
    const hasDefaultCanPrice = content.blocks.some(block => 
      block.id === 'can-module' && block.price === '2500'
    );
    
    const hasDefaultAnalogPrice = content.blocks.some(block => 
      block.id === 'analog-module' && block.price === '1800'
    );
    
    // –ï—Å–ª–∏ —Ö–æ—Ç—è –±—ã 2 –∏–∑ 3 –ø—Ä–∏–∑–Ω–∞–∫–æ–≤ —Å–æ–≤–ø–∞–¥–∞—é—Ç - —ç—Ç–æ –¥–µ—Ñ–æ–ª—Ç
    const defaultIndicators = [hasDefaultHeroTitle, hasDefaultCanPrice, hasDefaultAnalogPrice].filter(Boolean).length;
    return defaultIndicators >= 2;
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–µ—Ñ–æ–ª—Ç–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞:', error);
    return true; // –ü—Ä–∏ –æ—à–∏–±–∫–µ —Å—á–∏—Ç–∞–µ–º —á—Ç–æ —ç—Ç–æ –¥–µ—Ñ–æ–ª—Ç - –±–µ–∑–æ–ø–∞—Å–Ω–µ–µ
  }
};

export const saveContentToDatabase = async (content: SiteContent): Promise<boolean> => {
  try {
    // –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –ü–†–û–í–ï–†–ö–ê #1: Supabase –Ω–∞—Å—Ç—Ä–æ–µ–Ω?
    if (!supabaseUrl || !supabaseAnonKey) {
      console.error('‚ùå Supabase not configured - missing environment variables');
      return false;
    }

    // –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –ü–†–û–í–ï–†–ö–ê #2: –ù–ï –°–û–•–†–ê–ù–Ø–ï–ú –î–ï–§–û–õ–¢–ù–´–ô –ö–û–ù–¢–ï–ù–¢!
    if (isDefaultContent(content)) {
      console.log('üö´üö´üö´ –ë–õ–û–ö–ò–†–û–í–ö–ê –í SUPABASE: –î–ï–§–û–õ–¢–ù–´–ô –ö–û–ù–¢–ï–ù–¢ –ù–ï –°–û–•–†–ê–ù–Ø–ï–¢–°–Ø!');
      console.log('üö´üö´üö´ –ó–ê–©–ò–¢–ê –°–†–ê–ë–û–¢–ê–õ–ê –ù–ê –£–†–û–í–ù–ï –ë–î!');
      return false;
    }

    // –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –ü–†–û–í–ï–†–ö–ê #3: –ö–æ–Ω—Ç–µ–Ω—Ç –Ω–µ –ø—É—Å—Ç–æ–π?
    if (!content || !content.blocks || content.blocks.length === 0) {
      console.log('üö´üö´üö´ –ë–õ–û–ö–ò–†–û–í–ö–ê: –ü–£–°–¢–û–ô –ö–û–ù–¢–ï–ù–¢ –ù–ï –°–û–•–†–ê–ù–Ø–ï–¢–°–Ø –í –ë–î!');
      return false;
    }

    console.log('üîÑ –°–û–•–†–ê–ù–ï–ù–ò–ï –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨–°–ö–û–ì–û –ö–û–ù–¢–ï–ù–¢–ê –í –ë–î (–ü–û–õ–ù–ê–Ø –ü–ï–†–ï–ó–ê–ü–ò–°–¨)...');
    
    // –ö–†–ò–¢–ò–ß–ù–û: –ü–æ–ª–Ω–∞—è –ø–µ—Ä–µ–∑–∞–ø–∏—Å—å –∑–∞–ø–∏—Å–∏ —Å id='main'
    // –°–Ω–∞—á–∞–ª–∞ —É–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é –∑–∞–ø–∏—Å—å, –∑–∞—Ç–µ–º —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é
    const { error: deleteError } = await supabase
      .from('site_content')
      .delete()
      .eq('id', 'main');
    
    if (deleteError) {
      console.log('‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å—Ç–∞—Ä–æ–π –∑–∞–ø–∏—Å–∏:', deleteError.message);
      // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ, —Ç–∞–∫ –∫–∞–∫ –∑–∞–ø–∏—Å–∏ –º–æ–∂–µ—Ç –Ω–µ –±—ã—Ç—å
    } else {
      console.log('üóëÔ∏è –°—Ç–∞—Ä–∞—è –∑–∞–ø–∏—Å—å —É–¥–∞–ª–µ–Ω–∞');
    }
    
    // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å
    const { data, error } = await supabase
      .from('site_content')
      .insert({
        id: 'main',
        content: content,
        created_at: new Date().toISOString(),
        updated_at: new Date().toISOString()
      });
    

    if (error) {
      console.error('‚ùå –û–®–ò–ë–ö–ê –°–û–ó–î–ê–ù–ò–Ø –ù–û–í–û–ô –ó–ê–ü–ò–°–ò –í –ë–î:', error);
      return false;
    }

    console.log('‚úÖ‚úÖ‚úÖ –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨–°–ö–ò–ô –ö–û–ù–¢–ï–ù–¢ –£–°–ü–ï–®–ù–û –°–û–•–†–ê–ù–ï–ù –í –ë–î (–ü–û–õ–ù–ê–Ø –ü–ï–†–ï–ó–ê–ü–ò–°–¨)!', data);
    return true;
  } catch (error) {
    console.error('‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –°–û–•–†–ê–ù–ï–ù–ò–Ø –í –ë–î:', error);
    return false;
  }
};

export const loadContentFromDatabase = async (): Promise<SiteContent | null> => {
  try {
    // Check if Supabase is properly configured
    if (!supabaseUrl || !supabaseAnonKey) {
      console.error('‚ùå Supabase not configured - missing environment variables');
      return null;
    }

    console.log('üîÑ –ó–ê–ì–†–£–ó–ö–ê –ò–ó –ë–î...');
    
    const { data, error } = await supabase
      .from('site_content')
      .select('content')
      .eq('id', 'main')
      .maybeSingle();

    if (error) {
      console.error('‚ùå –û–®–ò–ë–ö–ê –ó–ê–ì–†–£–ó–ö–ò –ò–ó –ë–î:', error);
      return null;
    }

    if (data && data.content) {
      console.log('‚úÖ –ö–û–ù–¢–ï–ù–¢ –ó–ê–ì–†–£–ñ–ï–ù –ò–ó –ë–î');
      
      // –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –ü–†–û–í–ï–†–ö–ê: –ï—Å–ª–∏ –∏–∑ –ë–î –ø—Ä–∏—à–µ–ª –¥–µ—Ñ–æ–ª—Ç - –ù–ï –í–û–ó–í–†–ê–©–ê–ï–ú!
      if (isDefaultContent(data.content as SiteContent)) {
        console.log('üö´üö´üö´ –ò–ó –ë–î –ó–ê–ì–†–£–ñ–ï–ù –î–ï–§–û–õ–¢ - –≠–¢–û –û–®–ò–ë–ö–ê!');
        console.log('üö´üö´üö´ –í–û–ó–í–†–ê–©–ê–ï–ú NULL –ß–¢–û–ë–´ –ù–ï –ü–ï–†–ï–ó–ê–ü–ò–°–ê–¢–¨ –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨–°–ö–ò–ï –î–ê–ù–ù–´–ï!');
        return null;
      }
      
      console.log('‚úÖ‚úÖ‚úÖ –ó–ê–ì–†–£–ñ–ï–ù –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨–°–ö–ò–ô –ö–û–ù–¢–ï–ù–¢ –ò–ó –ë–î');
      return data.content as SiteContent;
    }

    console.log('‚ö†Ô∏è –ù–ï–¢ –î–ê–ù–ù–´–• –í –ë–î');
    return null;
  } catch (error) {
    console.error('‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –ó–ê–ì–†–£–ó–ö–ò –ò–ó –ë–î:', error);
    return null;
  }
};