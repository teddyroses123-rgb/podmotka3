import { SiteContent } from '../types/content';
import { defaultContent } from '../data/defaultContent';
import { saveContentToDatabase, loadContentFromDatabase } from './supabase';

// Debounce —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ª–æ–∂–µ–Ω–Ω–æ–≥–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
let saveTimeout: NodeJS.Timeout | null = null;
const SAVE_DELAY = 1000; // 1 —Å–µ–∫—É–Ω–¥–∞ –∑–∞–¥–µ—Ä–∂–∫–∏

const STORAGE_KEY = 'siteContent';

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –∫–æ–Ω—Ç–µ–Ω—Ç –¥–µ—Ñ–æ–ª—Ç–Ω—ã–º
const isDefaultContent = (content: SiteContent): boolean => {
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ –∫–ª—é—á–µ–≤—ã–º —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞–º –¥–µ—Ñ–æ–ª—Ç–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
    const hasDefaultHeroTitle = content.blocks.some(block => 
      block.id === 'hero' && 
      block.title === '–ü–Ü–î–ú–û–¢–ö–ê –°–ü–Ü–î–û–ú–ï–¢–†–ê ‚Äî –£ –í–ê–®–ò–• –†–£–ö–ê–•'
    );
    
    const hasDefaultModulesCount = content.blocks.filter(block => 
      ['can-module', 'analog-module', 'ops-module'].includes(block.id)
    ).length === 3;
    
    const hasDefaultPrices = content.blocks.some(block => 
      block.id === 'can-module' && block.price === '2500'
    );
    
    return hasDefaultHeroTitle && hasDefaultModulesCount && hasDefaultPrices;
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–µ—Ñ–æ–ª—Ç–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞:', error);
    return false;
  }
};

export const saveContent = async (content: SiteContent, immediate: boolean = false): Promise<void> => {
  try {
    // –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –ü–†–û–í–ï–†–ö–ê: –ù–ï –°–û–•–†–ê–ù–Ø–ï–ú –î–ï–§–û–õ–¢–ù–´–ô –ö–û–ù–¢–ï–ù–¢!
    if (isDefaultContent(content)) {
      console.log('üö´ –ë–õ–û–ö–ò–†–û–í–ö–ê: –ü–æ–ø—ã—Ç–∫–∞ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –¥–µ—Ñ–æ–ª—Ç–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç!');
      console.log('üö´ –î–ï–§–û–õ–¢–ù–´–ô –ö–û–ù–¢–ï–ù–¢ –ù–ï –°–û–•–†–ê–ù–Ø–ï–¢–°–Ø –í –ë–î!');
      return;
    }
    
    console.log('üåê –°–û–•–†–ê–ù–ï–ù–ò–ï –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨–°–ö–û–ì–û –ö–û–ù–¢–ï–ù–¢–ê –í –ë–î...');
    
    // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
    if (immediate) {
      console.log('‚ö° –ù–ï–ú–ï–î–õ–ï–ù–ù–û–ï —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞...');
      const dbSaved = await saveContentToDatabase(content);
      if (dbSaved) {
        console.log('‚úÖ –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨–°–ö–ò–ô –ö–û–ù–¢–ï–ù–¢ –°–û–•–†–ê–ù–ï–ù –í –ë–î');
        window.dispatchEvent(new CustomEvent('contentSaved', { detail: { success: true } }));
      } else {
        console.log('‚ùå –û–®–ò–ë–ö–ê —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞');
        window.dispatchEvent(new CustomEvent('contentSaved', { detail: { success: false } }));
      }
    } else {
      // –û—Ç–ª–æ–∂–µ–Ω–Ω–æ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
      if (saveTimeout) {
        clearTimeout(saveTimeout);
      }
      
      saveTimeout = setTimeout(async () => {
        console.log('‚è∞ –û–¢–õ–û–ñ–ï–ù–ù–û–ï —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞...');
        const dbSaved = await saveContentToDatabase(content);
        if (dbSaved) {
          console.log('‚úÖ –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨–°–ö–ò–ô –ö–û–ù–¢–ï–ù–¢ –°–û–•–†–ê–ù–ï–ù –í –ë–î (–æ—Ç–ª–æ–∂–µ–Ω–Ω–æ)');
          window.dispatchEvent(new CustomEvent('contentSaved', { detail: { success: true } }));
        } else {
          console.log('‚ùå –û–®–ò–ë–ö–ê –æ—Ç–ª–æ–∂–µ–Ω–Ω–æ–≥–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è');
          window.dispatchEvent(new CustomEvent('contentSaved', { detail: { success: false } }));
        }
      }, SAVE_DELAY);
    }
    
  } catch (error) {
    console.error('‚ùå Error in saveContent:', error);
    // –ü—Ä–∏ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–π –æ—à–∏–±–∫–µ - —Ç–æ–ª—å–∫–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    console.log('üö´ –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: –ù–ï –°–û–•–†–ê–ù–Ø–ï–ú –ù–ò–ß–ï–ì–û');
    window.dispatchEvent(new CustomEvent('contentSaved', { detail: { success: false, error: error.message } }));
  }
};

export const loadContent = async (): Promise<SiteContent> => {
  try {
    console.log('üåê –ó–ê–ì–†–£–ó–ö–ê –¢–û–õ–¨–ö–û –ò–ó –ì–õ–û–ë–ê–õ–¨–ù–û–ô –ë–î...');
    
    // –¢–û–õ–¨–ö–û –∏–∑ –≥–ª–æ–±–∞–ª—å–Ω–æ–π –ë–î - –Ω–∏–∫–∞–∫–∏—Ö –¥–µ—Ñ–æ–ª—Ç–æ–≤!
    const dbContent = await loadContentFromDatabase();
    if (dbContent) {
      console.log('‚úÖ –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨–°–ö–ò–ô –ö–û–ù–¢–ï–ù–¢ –ó–ê–ì–†–£–ñ–ï–ù –ò–ó –ë–î');
      const fixedContent = fixBlockOrder(dbContent);
      // –ù–ï –°–û–•–†–ê–ù–Ø–ï–ú –≤ localStorage - —Ç–æ–ª—å–∫–æ –ë–î!
      console.log('üö´ localStorage –æ—Ç–∫–ª—é—á–µ–Ω - —Ç–æ–ª—å–∫–æ –ë–î');
      return fixedContent;
    }
    
    console.log('‚ö†Ô∏è –ë–î –ü–£–°–¢–ê - –í–û–ó–í–†–ê–©–ê–ï–ú –î–ï–§–û–õ–¢ –ë–ï–ó –°–û–•–†–ê–ù–ï–ù–ò–Ø');
    
    // –ë–î –ø—É—Å—Ç–∞ - –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –¥–µ—Ñ–æ–ª—Ç —Ç–æ–ª—å–∫–æ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è, –ù–ï –°–û–•–†–ê–ù–Ø–ï–ú!
    console.log('üÜò –ë–î –ü–£–°–¢–ê: –¥–µ—Ñ–æ–ª—Ç —Ç–æ–ª—å–∫–æ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è');
    return fixBlockOrder(defaultContent);
    
  } catch (error) {
    console.error('‚ùå –û–®–ò–ë–ö–ê –ë–î:', error);
    
    // –ü—Ä–∏ –æ—à–∏–±–∫–µ –ë–î - –¥–µ—Ñ–æ–ª—Ç —Ç–æ–ª—å–∫–æ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
    console.log('üÜò –û–®–ò–ë–ö–ê –ë–î: –¥–µ—Ñ–æ–ª—Ç —Ç–æ–ª—å–∫–æ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è');
    return fixBlockOrder(defaultContent);
  }
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ—Ä—è–¥–∫–∞ –±–ª–æ–∫–æ–≤
const fixBlockOrder = (content: SiteContent): SiteContent => {
  console.log('üîß Fixing block order');
  console.log('Current blocks:', content.blocks.map(b => ({ id: b.id, title: b.title, order: b.order, type: b.type })));
  
  const reorderedBlocks = content.blocks.map(block => {
    // –°–∏—Å—Ç–µ–º–Ω—ã–µ –±–ª–æ–∫–∏ —Å —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –ø–æ—Ä—è–¥–∫–æ–º
    if (block.id === 'hero') return { ...block, order: 1 };
    if (block.id === 'features') return { ...block, order: 2 };
    if (block.id === 'modules') return { ...block, order: 3 };
    if (block.id === 'can-module') return { ...block, order: 4 };
    if (block.id === 'analog-module') return { ...block, order: 5 }; 
    if (block.id === 'ops-module') return { ...block, order: 6 };
    
    // –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª—è –±–ª–æ–∫–∞ –ê–ë–° –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é
    if (block.title && (block.title.includes('–ê–ë–°') || block.title.includes('–∞–±—Å'))) {
      console.log(`üéØ Found ABS block: "${block.title}" - setting order = 7`);
      return { ...block, order: 7, type: 'custom' };
    }
    
    // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –±–ª–æ–∫–∏ - –º–µ–∂–¥—É OPS (6) –∏ –≤–∏–¥–µ–æ (50)
    if (block.type === 'custom') {
      const customBlocks = content.blocks.filter(b => b.type === 'custom');
      const customIndex = customBlocks.findIndex(b => b.id === block.id);
      const newOrder = 7 + customIndex;
      console.log(`üì¶ Custom block "${block.title}" (${block.id}): ${block.order} -> ${newOrder}`);
      return { ...block, order: newOrder };
    }
    
    // –í–∏–¥–µ–æ –∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã –≤ –∫–æ–Ω—Ü–µ
    if (block.id === 'videos') return { ...block, order: 50 };
    if (block.id === 'contacts') return { ...block, order: 51 };
    
    // –û—Å—Ç–∞–ª—å–Ω—ã–µ –±–ª–æ–∫–∏ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç —Å–≤–æ–π –ø–æ—Ä—è–¥–æ–∫
    return block;
  });
  
  console.log('‚úÖ New block order:', reorderedBlocks.map(b => ({ id: b.id, title: b.title, order: b.order, type: b.type })));
  
  return {
    ...content,
    blocks: reorderedBlocks
  };
};

export const loadContentSync = (): SiteContent => {
  // –°–ò–ù–•–†–û–ù–ù–ê–Ø –ó–ê–ì–†–£–ó–ö–ê –û–¢–ö–õ–Æ–ß–ï–ù–ê - —Ç–æ–ª—å–∫–æ –¥–µ—Ñ–æ–ª—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
  console.log('üö´ localStorage –æ—Ç–∫–ª—é—á–µ–Ω - —Ç–æ–ª—å–∫–æ –¥–µ—Ñ–æ–ª—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è');
  return fixBlockOrder(defaultContent);
};

export const resetContent = (): SiteContent => {
  console.log('üö´ RESET –ü–û–õ–ù–û–°–¢–¨–Æ –ó–ê–ë–õ–û–ö–ò–†–û–í–ê–ù!');
  console.log('üö´ –í–û–ó–í–†–ê–¢ –ö –î–ï–§–û–õ–¢–£ –ù–ï–í–û–ó–ú–û–ñ–ï–ù!');
  // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –¥–µ—Ñ–æ–ª—Ç —Ç–æ–ª—å–∫–æ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è, –ù–ï –°–û–•–†–ê–ù–Ø–ï–ú!
  return fixBlockOrder(defaultContent);
};

export const exportContent = (): string => {
  const content = loadContentSync();
  return JSON.stringify(content, null, 2);
};

export const importContent = (jsonString: string): SiteContent => {
  try {
    const content = JSON.parse(jsonString);
    return content;
  } catch (error) {
    console.error('‚ùå Error importing content:', error);
    throw new Error('Invalid JSON format');
  }
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
export const forceSyncWithDatabase = async (): Promise<boolean> => {
  try {
    console.log('üö´ –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–ê–Ø –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–Ø –û–¢–ö–õ–Æ–ß–ï–ù–ê');
    console.log('üö´ –ù–ï –ú–û–ñ–ï–ú –ü–ï–†–ï–ó–ê–ü–ò–°–ê–¢–¨ –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨–°–ö–ò–ï –î–ê–ù–ù–´–ï');
    return false;
  } catch (error) {
    console.error('üö´ Force sync –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω:', error);
    return false;
  }
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —Å –ø–µ—Ä–µ–∑–∞–ø–∏—Å—å—é localStorage
export const loadFromDatabaseAndOverwrite = async (): Promise<SiteContent> => {
  try {
    console.log('üîÑ –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–æ–ª—å–∫–æ –∏–∑ –ë–î...');
    const dbContent = await loadContentFromDatabase();
    if (dbContent) {
      const fixedContent = fixBlockOrder(dbContent);
      console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç –∑–∞–≥—Ä—É–∂–µ–Ω –∏–∑ –ë–î');
      return fixedContent;
    } else {
      console.log('‚ö†Ô∏è –ë–î –ø—É—Å—Ç–∞ - –¥–µ—Ñ–æ–ª—Ç —Ç–æ–ª—å–∫–æ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è');
      return fixBlockOrder(defaultContent);
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑ –ë–î:', error);
    return fixBlockOrder(defaultContent);
  }
};